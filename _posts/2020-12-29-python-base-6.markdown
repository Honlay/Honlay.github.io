---
layout: post
title: 【Python基础6】数据类型-元祖
date: 2020-12-29 06:20:23 +0800
category: Python 
---


元组（tuple）与列表类似，不同之处在于元组的元素不能修改。元组使用小括号(),列表使用方括号[]。
## 1.元组基本操作
### 1.1 创建元组
元组创建很简单，只需要在括号中添加元素，并使用逗号隔开
```python
>>>tup1=('乔峰','段誉','虚竹')
>>>tup2=(1,2,3,4.1)
# 不使用括号也可
>>> tup3 = 'Chrome','FireFox','Edge'
>>> type(tup3)
<class 'tuple'>
# 创建空元组
tup4=()
# 元组只包含一个元素时，需要在元素后面添加逗号，否则括号会被当做运算符使用
>>> tup1=(50)
>>> type(tup1)
<class 'int'>
>>> tup1=(50,)
>>> type(tup1)
<class 'tuple'>
```
元组与字符串类似，下标索引从0开始，可以对元组进行截取、组合等操作
```python
>>> tup=('段正淳','乔峰','段誉','虚竹')
>>> tup[1:]
('乔峰', '段誉', '虚竹')
```
### 1.2访问元组
元组的访问和序列访问元素一样，都是通过下标索引访问
```python
>>> tup1 = ('乔峰', '段誉', '虚竹')
>>> tup[2]
'段誉'
```
### 1.3修改元组
元组中的值一旦定义就不能修改，但是我们可以通过元组与元组之间的连接关系进行修改：
```python
>>> tup1 = ('乔峰', '段誉', '虚竹')
>>> tup2 = ('阿珠', '王语嫣', '梦姑')
>>> tup1+tup2
('乔峰', '段誉', '虚竹', '阿珠', '王语嫣', '梦姑')
```

### 1.4 删除元组
由于元组的不可修改性，所以元组中的元素值是不可删除的，但可以使用del语句来删除整个元组
```python
>>> tup1 = ('乔峰', '段誉', '虚竹')
>>> del tup1
>>> tup1
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'tup1' is not defined
```

## 2.元组运算符
与字符串一样，元组之间可以用+和*进行运算。这就意味着他们可以组合和复制，运算后会生成一个新的元组
### 2.1 元组长度
元组长度使用运算函数len(),如下：
```python
>>> tup1 = ('乔峰', '段誉', '虚竹')
>>> len(tup1) 
3
```
### 2.2 连接元组
两个或多个元组的连接使用+号连接，如：
```python
>>> tup1 = ('乔峰', '段誉', '虚竹')
>>> tup2 = ('阿珠', '王语嫣', '梦姑')
>>> tup1+tup2
('乔峰', '段誉', '虚竹', '阿珠', '王语嫣', '梦姑')
```
### 2.3 复制元组
```python
>>> tup1 = ('乔峰', '段誉', '虚竹')
>>> tup1*3
('乔峰', '段誉', '虚竹', '乔峰', '段誉', '虚竹', '乔峰', '段誉', '虚竹')
```

### 2.4 判断元素
判断元素是否存在使用关键字in,判断结果返回布尔值
```python
>>> tup1 = ('乔峰', '段誉', '虚竹')
>>> '王语嫣' in tup1
False
```

### 2.5 元组中指定位置元素的访问
和列表一样，元组中的元素同样可以使用索引访问，如：
```python
>>> tup1 = ('乔峰', '段誉', '虚竹')
>>> tup1[1:]
('段誉', '虚竹')
```
## 3.元组的内置函数
和列表一样，元组同样也拥有一些内置函数，这些函数用于判断元组中的元素大小以及将元组做相应的转换
### 3.1 len() 函数
计算元组中的元素个数
```python

>>> tup1 = ('乔峰', '段誉', '虚竹')
>>> len(tup1) 
>>> 
```
### 3.2 max()函数

返回元组中元素最大值

```python
>>> tup=(1,2,5,2,8,3)
>>> max(tup)
8
```
### 3.3 min()函数
返回元组中元素最小值
```python
>>> tup=(1,2,5,2,8,3)
>>> min(tup)
1
```

### 3.4 tuple(iterable)函数
将可迭代对象（如列表）转换为元组
```python
>>> list1= ['Google', 'Taobao', 'Runoob', 'Baidu']
>>> tuple1=tuple(list1)
>>> tuple1
('Google', 'Taobao', 'Runoob', 'Baidu')
```

